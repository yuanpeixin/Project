package com.peixin.gameforum;

import java.util.ArrayList;
import java.util.List;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class AddComment extends Activity implements OnClickListener {

	private EditText title, message;
	private Button mSubmit;

	// Progress Dialog
	private ProgressDialog pDialog;

	// JSON parser class
	JSONParser jsonParser = new JSONParser();

	// php login script

	// localhost :
	// testing on your device
	// put your local ip instead, on windows, run CMD > ipconfig
	// or in mac's terminal type ifconfig and look for the ip under en0 or en1
	// private static final String POST_COMMENT_URL =
	// "http://xxx.xxx.x.x:1234/webservice/addcomment.php";

	// testing on Emulator:
	private static final String POST_COMMENT_URL = "http://yuanpeixin.com/gameforum/addtopic.php";

	// testing from a real server:
	// private static final String POST_COMMENT_URL =
	// "http://www.mybringback.com/webservice/addcomment.php";

	// ids
	private static final String TAG_SUCCESS = "success";
	private static final String TAG_MESSAGE = "message";

	private String gameName;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.add_comment);
		initialize();
	}

	@Override
	public void onClick(View v) {
		new PostComment().execute();
	}

	private void initialize() {
		// TODO Auto-generated method stub
		title = (EditText) findViewById(R.id.acTitle);
		message = (EditText) findViewById(R.id.acMessage);

		mSubmit = (Button) findViewById(R.id.submit);
		mSubmit.setOnClickListener(this);

		TextView tv = (TextView) findViewById(R.id.acTV);
		ImageView iv = (ImageView) findViewById(R.id.acImage);
		
		SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(this);
		gameName = sp.getString("game", "");
		
		tv.setText(gameName);
		/*
		"Legion of Heroes",
		"Word of Warcraft",
		"Dragon Next",
		"Final Fantasy XIV",
		"League of Legends"
		*/
		switch(gameName){
			case "Legion of Heroes":
				iv.setImageResource(R.drawable.legion_of_heroes);
				break;
			case "Word of Warcraft":
				iv.setImageResource(R.drawable.wow);
				break;
			case "Dragon Next":
				iv.setImageResource(R.drawable.dragon_nest);
				break;
			case "Final Fantasy XIV":
				iv.setImageResource(R.drawable.ffxiv);
				break;
			case "League of Legends":
				iv.setImageResource(R.drawable.lol);
				break;
		}
	}

	class PostComment extends AsyncTask<String, String, String> {

		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			pDialog = new ProgressDialog(AddComment.this);
			pDialog.setMessage("Posting Topic...");
			pDialog.setIndeterminate(false);
			pDialog.setCancelable(true);
			pDialog.show();
		}

		@Override
		protected String doInBackground(String... args) {
			// TODO Auto-generated method stub
			// Check for success tag
			int success;
			String post_title = title.getText().toString();
			String post_message = message.getText().toString();

			// Retrieving Saved Username Data:
			SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(AddComment.this);
			String post_username = sp.getString("username", "guest");

			try {
				// Building Parameters
				List<NameValuePair> params = new ArrayList<NameValuePair>();
				params.add(new BasicNameValuePair("username", post_username));
				params.add(new BasicNameValuePair("title", post_title));
				params.add(new BasicNameValuePair("comment", post_message));
				params.add(new BasicNameValuePair("game", gameName));
				
				Log.d("request!", "starting");

				// Posting user data to script
				JSONObject json = jsonParser.makeHttpRequest(POST_COMMENT_URL, "POST", params);

				// full json response
				Log.d("Post Comment attempt", json.toString());

				// json success element
				success = json.getInt(TAG_SUCCESS);
				if (success == 1) {
					Log.d("Comment Added!", json.toString());
					finish();
					return json.getString(TAG_MESSAGE);
				} else {
					Log.d("Comment Failure!", json.getString(TAG_MESSAGE));
					return json.getString(TAG_MESSAGE);

				}
			} catch (JSONException e) {
				e.printStackTrace();
			}

			return null;

		}

		protected void onPostExecute(String file_url) {
			// dismiss the dialog once product deleted
			pDialog.dismiss();
			if (file_url != null) {
				Toast.makeText(AddComment.this, file_url, Toast.LENGTH_LONG).show();
			}

		}

	}

}
